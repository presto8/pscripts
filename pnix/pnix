#!/usr/bin/env bash

help() {
# pnix: a convenience wrapper for NixOS operations by Preston Hunt <me@prestonhunt.com>
#
# usage: pnix <command> [options]
#
#    all         same as optimize + collect
#    boot        run "/etc/nixos/build boot"
#    build       run "/etc/nixos/build"
#    gc          run "sudo nix-collect-garbage" and "nix-collect-garbage" (as user)
#    rm N        run "sudo nix-env -p /nix/var/nix/profiles/system --delete-generations N"
#    rm id N     run "nix-env --delete-generations"
#    du          show disk usage of generations and profiles
#    list        run "sudo nix-env -p /nix/var/nix/profiles/system --list-generations"
#    optimize    run "sudo nix-store --optimise"
#    switch      run "/etc/nixos/build switch"
#    test        run "/etc/nixos/build test"
#    update      run "nix flake update and sudo nix-channel --update"
#    vi|edit     run "vi /etc/nixos/$HOSTNAME/configuration.nix"
#
    awk '/help\(\)/{flag=1; next} /awk.*help/{flag=0} flag{sub(/# ?/,""); print}' "$0"
}

main() {
    set -Eeu -o pipefail

    cmd=${1:-help}
    shift ||:

    case $cmd in
        all)
            run_sudo nix-collect-garbage
            run_user nix-collect-garbage
            run_sudo nix-store --optimise
            ;;
        help)
            help
            exit 0
            ;;
        boot)
            /etc/nixos/build boot
            ;;
        build)
            /etc/nixos/build "$@"
            ;;
        du)
            run_du
            ;;
        gc)
            run_sudo nix-collect-garbage
            run_user nix-collect-garbage
            ;;
        l*)
            run_sudo nix-env -p /nix/var/nix/profiles/system --list-generations
            run_user home-manager generations
            ;;
        op*)
            run_sudo nix-store --optimise
            ;;
        rm)
            if [[ ${1:-} == "id" ]]; then
                shift
                run_user home-manager remove-generations "$@"
            else
                run_sudo nix-env -p /nix/var/nix/profiles/system --delete-generations "$@"
            fi
            ;;
        switch)
            /etc/nixos/build switch
            ;;
        test)
            /etc/nixos/build test
            ;;
        up*)
            /etc/nixos/build update &
            run_sudo nix-channel --update &
            wait
            ;;
        vi|edit)
            sudo vi /etc/nixos/"$HOSTNAME"/default.nix
            ;;
    esac

    random_check_for_old_generations
}

random_check_for_old_generations() {
    if (( RANDOM % 10 != 0 )); then
        return
    fi

    num_sys_gens=$(run_sudo nix-env -p /nix/var/nix/profiles/system --list-generations | grep -c '^')
    if (( num_sys_gens > 10 )); then
        info "$num_sys_gens system generations is over the limit of 10"
    fi

    num_hm_gens=$(run_user home-manager generations | grep -c '^')
    if (( num_hm_gens > 10 )); then
        info "$num_hm_gens home manager generations is over the limit of 10"
    fi
}

run_du() {
    for p in /nix/var/nix/profiles/system* /nix/var/nix/profiles/per-user/"$USER"/profile*; do
        size=$(nix-store -q --requisites "$p" | sort -uf | xargs du -ch | tail -1)
        echo "$size  $p"
    done
}

info() { echo ":: $*"; }
die() { echo "!! $*"; exit 1; }

run_sudo() { info "sudo $*" ; sudo nice "$@" ; }
run_user() { info "$*" ; nice "$@" ; }

main "$@"
